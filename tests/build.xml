<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="Aranea tests">

	<property name="src.build.dir" value="../build/classes"/>
	<property name="src.instrumented.build.dir" value="build/instrumented"/>
	<property name="src.dir" value="../src"/>
	<property name="lib.dir" value="../lib"/>
	<property name="build.coverage.dir" value="build/coverage"/>
	
	<property name="test.build.dir" value="build/classes"/>
	<property name="test.reports.dir" value="build/reports"/>
	<property name="test.src.dir" value="src"/>

	<property name="test.js.browsers" value="C:/Program Files (x86)/Internet Explorer/iexplore.exe"/>
	<property name="test.js.port" value="" description="If not specified, the default port is 8080."/>
	<property name="test.js.resourceBase" value="js"/>
	<property name="test.js.logsDir" value="${test.reports.dir}"/>

	<path id="classpath">
		<fileset dir="../lib" includes="**/*.jar" excludes="/build-util/*.jar"/>
		<fileset dir="../dist" includes="**/*.jar"/>
	</path>

	<path id="test.cp">
		<fileset dir="${lib.dir}/runtime/" includes="*.jar"/>
		<fileset dir="${lib.dir}/build/" includes="*.jar"/>
		<fileset dir="${lib.dir}/test/" includes="*.jar"/>
		<fileset dir="../dist" includes="*.jar"/>
	</path>

	<!-- FILES PREPARATION AND BUIDING ARTIFACTS -->

	<target name="clean" description="Clean up build system results">
		<delete dir="build" failonerror="false"/>
		<delete dir="dist" failonerror="false"/>
	</target>

	<target name="build" depends="compile" description="Build the code"/>

	<target name="compile">
		<mkdir dir="build/classes" />

		<javac destdir="build/classes"
			debug="on"
			debuglevel="lines,vars,source"
			encoding="utf-8"
			srcdir="src"
			source="1.5"
			target="1.5"
		>
			<classpath refid="classpath"/>
			<include name="**/*.java" />
		</javac>

		<mkdir dir="dist"/>
		<jar destfile="dist/aranea-tests.jar">
			<fileset dir="build/classes">
				<include name="org/araneaframework/**/*"/>
			</fileset>
		</jar>
	</target>

	<!-- RUNNING TESTS -->

	<!-- 1. Running JsUnit tests: -->
	<!-- JS tests should be run when the platform has GUI and provides access to the defined browsers! -->
	<target name="run-js-tests" description="Runs JsUnit tests on the local machine as configured by the properties.">
		<path id="curdir" location="${basedir}"/>

		<pathconvert property="runnerFile" refid="curdir" dirsep="/">
			<mapper from="*" to="*/js/testRunner.html" type="glob"/>
		</pathconvert>

		<pathconvert property="testPage" refid="curdir" dirsep="%5C">
			<mapper from="*" to="*%5Cjs%5Caranea-all-test.html" type="glob"/>
		</pathconvert>

		<property name="url" value="file:///${runnerFile}?testPage=${testPage}&amp;autoRun=true&amp;submitresults=true"/>
		<echo message="${url}"/>

		<mkdir dir="${test.reports.dir}" />
		<junit showoutput="true" printsummary="on" fork="yes">
			<classpath>
				<fileset dir="../lib/test" includes="*.jar"/>
			</classpath>
			<sysproperty key="browserFileNames" value="${test.js.browsers}"/>
			<sysproperty key="url" value="${url}"/>
			<sysproperty key="port" value=""/>
			<sysproperty key="resourceBase" path="${test.js.resourceBase}"/>
			<sysproperty key="logsDirectory" path="${test.js.logsDir}"/>
			<test name="net.jsunit.StandaloneTest" todir="${test.reports.dir}"/>
			<formatter type="xml"/>
		</junit>
	</target>

	<!-- 2. Running JUnit tests: -->
	<target name="run-tests" depends="build" description="Run the junit tests">
		<mkdir dir="${test.reports.dir}" />
		<junit printsummary="on" fork="yes">
			<sysproperty key="user.dir" value="${basedir}"/>
			<classpath location="${src.build.dir}"/>
			<classpath location="${test.build.dir}"/>
			<classpath refid="classpath"/>
			<formatter type="xml" />
			<batchtest todir="${test.reports.dir}">
				<fileset dir="${test.build.dir}">
					<include name="**/*Test.class"/>
					<include name="**/*Tests.class"/>
					<!-- exclude abstract tests -->
					<exclude name="**/BaseMessageContextTests.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="run-perf-tests" depends="build" description="Runs performance tests">
		<junit haltonfailure="yes" fork="yes">
			<test name="org.araneaframework.perftests.TimedSmokeTests"/>
			<formatter type="plain" usefile="false"/>
			<classpath location="${src.build.dir}"/>
			<classpath location="${test.build.dir}"/>
			<classpath refid="classpath"/>
		</junit>
	</target>

	<target name="coverage" depends="cover-tests" description="Generate coverage information">
		<mkdir dir="${build.coverage.dir}"/>
		<mkdir dir="${build.coverage.dir}/srcCopy"/>
		<copy todir="${build.coverage.dir}/srcCopy">
			<fileset dir="${src.dir}"/>
			<fileset dir="${test.src.dir}"/>
		</copy>

		<cobertura-report srcdir="${build.coverage.dir}/srcCopy" destdir="${build.coverage.dir}"/>
	</target>

	<target name="coverage2" depends="cover-tests-fail-integration">
		<mkdir dir="${build.coverage.dir}"/>
		<mkdir dir="${build.coverage.dir}/srcCopy"/>
		<copy todir="${build.coverage.dir}/srcCopy">
			<fileset dir="${src.dir}"/>
			<fileset dir="${test.src.dir}"/>
		</copy>

		<cobertura-report srcdir="${build.coverage.dir}/srcCopy" destdir="${build.coverage.dir}"/>
	</target>

	<!-- test the system -->
	<target name="cover-tests" depends="instrument">
		<mkdir dir="${test.reports.dir}" />
		<junit printsummary="yes" fork="yes" haltonfailure="false" showoutput="yes">
			<classpath location="${src.instrumented.build.dir}"/>
			<classpath location="${test.build.dir}"/>
			<classpath refid="classpath"/>

			<formatter type="xml" />
			<batchtest todir="${test.reports.dir}">
				<fileset dir="${test.build.dir}">
					<include name="**/*Test.class"/>
					<include name="**/*Tests.class"/>
					<!-- exclude abstract tests -->
					<exclude name="**/BaseMessageContextTests.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- test the system without integration tests -->
	<target name="cover-tests-fail-integration" depends="instrument">
		<mkdir dir="${test.reports.dir}" />
		<junit printsummary="yes" fork="yes" haltonfailure="false" showoutput="yes">
			<classpath location="${src.instrumented.build.dir}"/>
			<classpath location="${test.build.dir}"/>
			<classpath refid="classpath"/>
			<formatter type="xml" />
			<batchtest todir="${test.reports.dir}">
				<fileset dir="${test.build.dir}">
					<include name="**/*Test.class"/>
					<include name="**/*Tests.class"/>
					<!-- exclude abstract tests -->
					<exclude name="**/BaseMessageContextTests.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="instrument" depends="build">
		<cobertura-instrument todir="${src.instrumented.build.dir}">
			<fileset dir="${src.build.dir}">
				<include name="**/*.class"/>
			</fileset>
		</cobertura-instrument>
	</target>

</project>
