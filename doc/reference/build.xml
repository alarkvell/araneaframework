<project name="ReferenceDocumentation" default="build" basedir=".">
    <!-- Allow this to be overriden by others importing this project. -->
    <dirname property="imported.basedir" file="${ant.file.ReferenceDocumentation}"/>

    <!-- Set build directories for all formats. -->
    <property name="build.dir"             value="../../dist/doc/reference"/>

    <!-- Support files for build process. -->
    <property name="support.dir"           value="${imported.basedir}/../support"/>
	
		<!-- Support files for build process. -->
		<property name="style.dir"           value="${imported.basedir}/../support"/>
	

    <!-- Base name for documentation artifacts. -->
    <property name="docname"               value="aranea-reference"/>

    <!-- Set DocBook stylesheets. -->
    <property name="db.style.fopdf"        value="fopdf.xsl"/>
    <property name="db.style.html"         value="html_chunk.xsl"/>
    <property name="db.style.htmlsingle"   value="html.xsl"/>

    <!-- Classpath for the build tools. -->
    <path id="lib.classpath">
        <fileset dir="${support.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>


    <!-- ################################################################## -->

    <target name="clean">

        <!-- Delete build directory. -->
        <delete dir="${build.dir}" failonerror="false"/>

    </target>

    <target name="build">
        <!-- Compile the documentation for a single age in all formats. -->
        <antcall target="pdf"/>
        <antcall target="html"/>
        <antcall target="html-single"/>
        <antcall target="copy-shared"/>
    </target>


    <target name="pdf-prepare">

        <!-- Copy all the images to the output location, will be removed later. -->
        <copy todir="${build.dir}/pdf/images">
            <fileset dir="${basedir}/images">
                <include name="**/*.png"/>
                <include name="**/*.svg"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>

        <!-- Create the XSL/FO temporary file. -->
        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${basedir}" maxmemory="128m" >
        	  <sysproperty key="java.awt.headless" value="true"/>    	       
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="${build.dir}/pdf/docbook_fop.tmp"/>
            <arg value="${basedir}/src/master.xml"/>
            <arg value="${basedir}/styles/${db.style.fopdf}"/>
        </java>

        <available property="custom.fop.userconfig.present" file="userconfig.xml" filepath="${basedir}/fop"/>
    </target>

    <target name="pdf-customized" depends="pdf-prepare" if="custom.fop.userconfig.present">

        <copy todir="${build.dir}/pdf">
            <fileset dir="${basedir}/fop">
                <include name="*"/>
            </fileset>
        </copy>

        <!-- Create a PDF from the XSL/FO, using customized fop userconfig.xml -->
        <java classname="org.apache.fop.apps.Fop" fork="true" dir="${basedir}" maxmemory="128m" >
            <classpath refid="lib.classpath"/>
            <arg value="-c"/>
            <arg value="${basedir}/fop/userconfig.xml"/>
            <arg value="${build.dir}/pdf/docbook_fop.tmp"/>
            <arg value="${build.dir}/pdf/${docname}.pdf"/>
        </java>
    </target>

    <target name="pdf-normal" depends="pdf-prepare" unless="custom.fop.userconfig.present">
        <!-- Create a PDF from the XSL/FO. -->
        <java classname="org.apache.fop.apps.Fop" fork="true" dir="${basedir}">
            <classpath refid="lib.classpath"/>
            <arg value="${build.dir}/pdf/docbook_fop.tmp"/>
            <arg value="${build.dir}/pdf/${docname}.pdf"/>
        </java>
    </target>

    <target name="pdf" depends="pdf-normal,pdf-customized"
            description="Generates the PDF documentation only for a age (set ">
        <!-- House keeping,delete temporary files. -->
        <delete failonerror="false">
            <fileset dir="${build.dir}/pdf" excludes="**/*.pdf"/>
        </delete>
        <delete  dir="${build.dir}/pdf/images"/>
    </target>

    <target name="html"
            description="Generates the HTML documentation only for a age (set ">

        <mkdir dir="${build.dir}/html/"/>
				
    		<copy todir="${build.dir}/html/">
    			<fileset dir="." includes="conf/**/*"/>
    		</copy>
    		
        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${build.dir}/html">
            <classpath refid="lib.classpath"/>
        		<sysproperty key="java.awt.headless" value="true"/>      	
            <arg value="${basedir}/src/master.xml"/>
            <arg value="${basedir}/styles/${db.style.html}"/>
        </java>
    	
    		<delete dir="${build.dir}/html/conf"/>
    </target>

    <target name="html-single"
        description="Generates the single-page HTML documentation only for a age (set ">

        <mkdir dir="${build.dir}/html_single/"/>

        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${basedir}">
            <classpath refid="lib.classpath"/>
        		<sysproperty key="java.awt.headless" value="true"/>      	
            <arg value="-o"/>
            <arg value="${build.dir}/html_single/index.html"/>
            <arg value="${basedir}/src/master.xml"/>
            <arg value="${basedir}/styles/${db.style.htmlsingle}"/>
        </java>
    </target>

    <target name="copy-shared">

        <!-- Copy images and CSS for HTML documentation, age specific. -->
        <copy todir="${build.dir}/shared/images">
            <fileset dir="${basedir}/images">
                <include name="**/*.png"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}/shared/css">
            <fileset dir="${basedir}/styles">
                <include name="**/*.css"/>
            </fileset>
        </copy>

    </target>

    <target name="section-check" depends="html"
            description="Reports missing unique chapter/section identifiers (set ">
        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${build.dir}/html">
            <classpath refid="lib.classpath"/>
            <arg value="${basedir}/src/master.xml"/>
            <arg value="${support.dir}/section-check.xsl"/>
        </java>
    </target>

</project>
