<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="build" name="Aranea Main Example">

	<property environment="env"/>

	<property name="rootDir" value="../.."/>

	<property name="lib.dir" value="${rootDir}/lib"/>

	<property name="example.jar" value="../common/dist/aranea-examples-common.jar"/>

	<property name="jetty.tmp.dir" value="tmp.jetty"/>

	<path id="build.cp">
		<fileset dir="${lib.dir}/runtime/" includes="*.jar"/>
		<fileset dir="${lib.dir}/build/" includes="*.jar" />
		<fileset dir="${lib.dir}/demo/" includes="*.jar"/>
		<path path="${rootDir}/dist/aranea.jar"/>
		<path path="${example.jar}"/>
	</path>

	<path id="jetty.cp">
		<path refid="build.cp"/>
		<fileset dir="${lib.dir}/jetty" includes="**/*.jar"/>
	</path>

	<taskdef classpathref="jetty.cp" resource="tasks.properties" loaderref="jetty.loader" />
	<typedef name="selectChannelConnector" classname="org.mortbay.jetty.nio.SelectChannelConnector" classpathref="jetty.cp" loaderref="jetty.loader" />

	<!--
	======================================================================
	=                   DEMO APP CODE BUILDING                           =
	======================================================================
	-->

	<target name="clean" description="Deletes copied and compiled resources.">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${jetty.tmp.dir}" />
			<fileset dir="war/WEB-INF/classes" />
			<fileset dir="war/WEB-INF/lib" />
			<fileset dir="war/jsp" />
			<fileset dir="war/src" />
			<fileset dir="dist" />
			<fileset dir="tmp" />
		</delete>
	</target>

	<target name="init" description="Initializes the build system.">
		<mkdir dir="war/WEB-INF/classes" />
		<mkdir dir="war/WEB-INF/lib" />
	</target>

	<target name="compile" depends="init" description="Compiles demo Java source files.">
		<javac destdir="war/WEB-INF/classes" debug="on" debuglevel="lines,vars,source" encoding="utf-8"
			target="1.5" source="1.5" srcdir="src" includes="**/*.java" classpathref="build.cp" />
	</target>

	<target name="build" depends="compile" description="Copies the needed libraries and files, and builds the demo Java code">
		<copy todir="war/WEB-INF/lib" flatten="true">
			<fileset dir="${lib.dir}/runtime/" />
			<fileset dir="${lib.dir}/build/" excludes="servlet-api.jar" />
			<fileset dir="${lib.dir}/demo/" />
			<fileset file="${example.jar}" />
			<fileset file="../../dist/aranea.jar" />
		</copy>

		<copy todir="war/WEB-INF/classes">
			<fileset dir=".." includes="log4j.xml,commons-logging.properties" />
		</copy>

		<!-- We also copy the source code of Java and JSP files to "war/src" and "war/jsp". -->

		<copy todir="war/src/">
			<fileset dir="src" includes="**/*.java"/>
		</copy>

		<copy todir="war/jsp/">
			<fileset dir="war/WEB-INF/jsp" includes="**/*.jsp" />
			<mapper type="glob" from="*.jsp" to="*.xml" />
		</copy>
	</target>

	<target name="build-all" depends="compile" description="Same as 'build' but also recompiles Aranea-MVC code.">
		<ant dir="../.." target="build-all" inheritall="false"/>
		<antcall target="build" />
	</target>

	<target name="war" depends="build" description="Creates the ready-to-deploy WAR archive.">
		<mkdir dir="dist" />
		<war destfile="dist/aranea-template-app.war">
			<fileset dir="war" />
		</war>
	</target>

	<!--
	======================================================================
	=                        RUNNING THE DEMO APP                        =
	======================================================================
	-->

	<target name="run-app" description="Runs app in the Jetty server.">
		<delete dir="${jetty.tmp.dir}"/>
		<jetty tempdirectory="${jetty.tmp.dir}">
			<webapp warfile="war" contextPath="/mainExample" />
			<connectors>
				<selectChannelConnector port="2000"/>
			</connectors>
		</jetty>
	</target>

	<target name="run-database-manager" description="Runs the HSQL database manager for the demo application.">
		<java classname="org.hsqldb.util.DatabaseManagerSwing" dir="data" fork="yes">
			<classpath>
				<pathelement location="../lib/hsqldb.jar" />
			</classpath>
			<arg line="--user sa --url jdbc:hsqldb:hsql://localhost/templateapp" />
		</java>
	</target>

</project>
