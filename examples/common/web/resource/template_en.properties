# Aranea Demo application translations in English.

# MENU
AraneaRelease=Aranea 2.0
Management=Management
Demos=Demos
Misc=Misc


# COMMON LABELS (used all over the application)
select.choose=- choose -

button.add=Add
button.change=Change
button.back=Back
button.cancel=Cancel
button.retry=Retry
button.search=Search
button.clear=Clear
button.save=Save
button.ok=OK
button.print=Print
button.submit=Submit
button.delete=Delete
button.remove=Remove
button.return=Return
button.edit=Edit
button.view=View

list.address=Address
list.next=Next
list.previous=Previous
list.submit=Submit
list.cancel=Cancel
list.showing=Showing [{0}-{1}].
list.total=Total {0}.
list.showAll=Show all.
list.showPartial=Show paged.
list.noData=The list contains no data.

common.form.valid=Form is valid.
common.description=Description
common.firstname=Name
common.lastname=Surname
common.name=Name
common.email=e-mail
common.sex=Sex
common.country=country
common.Country=Country
common.file=File
common.code=Code
common.date=Date
common.datetime=Date+time
common.time=Time
common.module=Module
common.department=Department
common.subdepartment=Subdepartment
common.insurer=Insurer

common.boolean=Boolean
common.float=Float
common.long=Long
common.string=String

common.yes=yes
common.no=no
common.choose=Choose

common.button=button
common.Button=Button
common.Checkbox=Checkbox
common.textbox=textbox
common.Textbox=Textbox
common.disabled=Disabled
common.readOnly=Read-Only

image.alt.edit=Change
image.alt.delete=Delete
image.alt.info=Info
image.alt.history=Change history

#date
date.month.0=January
date.month.1=February
date.month.2=March
date.month.3=April
date.month.4=May
date.month.5=June
date.month.6=July
date.month.7=August
date.month.8=September
date.month.9=October
date.month.10=November
date.month.11=December

date.day.1=M
date.day.2=Tu
date.day.3=We
date.day.4=Th
date.day.5=F
date.day.6=Sa
date.day.7=Su


# COMPONENTS

# 1. context menu
contextMenu=Context Menus
contextMenu.listTitle=Widget with Context Menu
contextMenu.intro=It is possible to customize the right-click contextmenu of your application. You can attach the customized contextmenu to page, list, form input field&mdash;to any component that might need it.
contextMenu.howto=Right-click anywhere inside this component to open a customized context-menu with one sublevel.
contextMenu.changeSex=Change sex


# 2. Easy AJAX w/ 'update regions'
easyajax=Easy AJAX with 'update regions'
easyajax.intro=Code of the two components on this page is identical. They behave a little differently though &ndash; upper component communicates with server by HTTP requests and the bottom one by XMLHttpRequests. This was just achieved by adding about two lines of code to template that renders bottom component. Using so called 'update regions' it is easy to make application behave in AJAXian manner. Those requests asynchronously update only part of your page allows end-user to continue with his business process without the delay that would otherwise occur while waiting for response.
easyajax.form.plain=Plain Form
easyajax.form.ajax=AJAX Form


# 3. Cooperative Form
cooperativeForm=Cooperative Form
cooperativeForm.intro=Cooperative forms only require user to enter minimum amount of data. Everything that can be deduced from the given information is. In this form this works as follows: when business registration number is filled in, other data can be fetched from central registry by pressing the corresponding button. At the same time, user can continue filling of the invoice data.
cooperativeForm.centralfirmid=Business registration number
cooperativeForm.registryaddress=Registered location
cooperativeForm.postaladdress=Postal address
cooperativeForm.bankaccount=Bank account
cooperativeForm.vatidentifier=VAT number
cooperativeForm.firmtype=Company type
cooperativeForm.invoice.id=Invoice identification number
cooperativeForm.invoice.date=Date of invoice
cooperativeForm.invoice.sum=Sum of invoice
cooperativeForm.npo=NPO
cooperativeForm.ltd.public=Public Ltd
cooperativeForm.ltd.private=Private Ltd
cooperativeForm.getdata=Fetch data from central registry
cooperativeForm.reset=Reset form


# 4. Input Suggest
inputSuggest=Input Suggest
inputSuggest.title=Autocomplete (Suggestions) Demo
inputSuggest.intro=It is well known fact that users do not know what they really want. With input suggestions, you can help them to overcome their initial cluelessness and maybe learn correct spelling of long words :)
inputSuggest.howto=When you type at least one character in input field below, browser will ask the server for suggested completions (which in this case are country names). User is by no means tied to suggested inputs though, 'M\u00e4gi-Karabahh' is as feasible input to below text-field as any other.


# 5. List with sorting & paging
simpleList=List with Sorting And Paging
simpleList.title=Simple List with Paging And Sorting Support
simpleList.intro=Creating read-only list from a bunch of model objects is really easy. Developer just declares the class of the model objects and the fields that should be shown and <a href="http://www.araneaframework.org/docs/1.2/javadoc/org/araneaframework/uilib/list/BeanListWidget.html" target="_blank">BeanListWidget</a> takes care of the rest&mdash;paging and sorting are provided without any additional code.
simpleList.howtonavigate=You can try out the sorting by clicking on the list header names and paging by using the navigation bar at the list bottom.


# 6. Simple editable list
simpleEditableList=Simple Editable List
simpleEditableList.title=Editable List with Filtering, Modification, Addition, And Deletion Support
simpleEditableList.intro=Read-only lists provide great overview of records, but do not directly allow modification. For easy modification, one can choose to use editable lists.
simpleEditableList.howtonavigate=You can try out filtering by filling some filter fields and pressing 'Return' key or clicking 'Filter' button. Addition of new record is done by filling data fields at the bottom of the list and clicking on 'Add' button. List field can be modified by activating edit mode (separate button for this is in each row).
simpleEditableList.errmsg=Field '{0}' must contain valid sex ('M' or 'F').


# 7. Modal Dialog
modalDialog=Modal Dialog
modalDialog.title=Modal Dialog Demo
modalDialog.intro=There are times when one needs to prevent users from wandering around in parallel usecases, shooting themselves in the foot at the go. Aranea provides a way to present all fully-functional Aranea components in modal dialogs (aka <i>overlay</i>), allowing user to complete a parallel usecase or just respond to an alert. This avoids the need to open additional browser windows that are often blocked by modern browsers or might just go unnoticed by user.
modalDialog.howto=Start another identical widget by clicking on a "Start next" or "Start next in overlay" buttons. Once the modal dialog (overlay mode) is activated, both buttons will act identically. When overlay completes (this will happen when "Return to previous" button is used in activated overlay where there are no more flows that are running inside overlay), user is returned to main usecase.
modalDialog.startNext=Start next
modalDialog.startNext.overlay=Start next in overlay
modalDialog.previous=Return to previous
modalDialog.closeOverlay=Close this dialog


# 8. Seamless Server-Side validation
seamless=Seamless Server-Side Validation
seamless.intro=Often instant feedback is desired in applications&mdash;user should not be allowed to proceed too far with his business process when his initial assumptions were incorrect and at the end he would be presented with some validation error screen. Aranea forms can be configured to perform validation as user fills it (opposed to the traditional approach when validation is performed when submitting the form). This prevents the delays and misunderstandings. Because this is implemented asynchronously there are no interrupts during input procedure and when form is finally submitted it will contain only acceptable data.
seamless.howto=Of two forms on this page, upper form is validated only on submit, lower one is validated seamlessly. Try it out by entering some invalid values. Keep in mind that not all rooms are available and not everyone is always able to attend meetings.
seamless.withoutbg.form=Form with traditional on-submit validation 
seamless.withbg.form=Form with Seamless Background-Validation
seamless.appointmentdate=Appointment date
seamless.appointmenttime=Appointment time
seamless.room=Room
seamless.attendees=Attendees
seamless.rooms.atrium=Atrium, Tartu
seamless.rooms.olympic=Casino Olympic, Tallinn
seamless.rooms.colosseum=Colosseum, Rome
seamless.rooms.rld=Red Light District, Zone Norte
seamless.rooms.warroom=War Room, Washington
seamless.room.not.available=Room "{0}" is already reserved
seamless.attendees.not.available="{0}" cannot attend the meeting (the person is preoccupied)!


# 9. Tabs
tabs=Tabs
tabs.intro=When user has lots of power, it is sometimes nice to lay this power out in a logically separated way. The tab widget that enjoys wide popularity in all sorts of UI interfaces provides clean approach to do just that. Navigation between your business processes in tabs can be done without the worries of state being lost.


# 10. Tree Component
tree=Tree Component
tree.title=Powerful Tree Component
tree.intro=Aranea tree component allows for easy navigation of complex hierarchical structures. Backing datastore resides on server and only parts that are currently shown to user are fetched to client. Demos below demonstrate two approaches of communication&mdash;first makes use of usual Aranea event API (produces HTTP requests here because no update regions are used), the other one uses Aranea Action API. Switching between the two models is as easy as calling <code>Treewidget.setUseActions(true)</code>.
tree.more=Although current example does not demonstrate this, it is also easy to customize rendering for each tree node. One can have each node rendered differently, if he so desires.
tree.events=Tree with events:
tree.actions=Tree with actions:

# 11. Periodical Data Polling
dataPoll=Periodical Data Polling


########################################################################################################################







searchform.notenoughdata=Not enough data

#demo
demo_filteredinput=Filtered Input Field
demo.filteredinput.filterchars=Filter chars
demo.filteredinput.input=Filtered input
demo_automaticForm_title=Automatic Formelement
demo.onchangelistenertest.http=OnChange Listeners Test (HTTP)
demo.onchangelistenertest.ajaxanywhere=OnChange Listeners Test (AjaxAnyWhere)
demo.onchangelistenertest.autocomplete=OnChange Listeners Test (Widget action, AjaxAnyWhere submit)
demo.suggestive.textinput=Suggestive input field

complexForm.title=AJAX form
complexForm.chooseBeast=Please choose a nature's beast
complexForm.multiSelect.changed=Value in multi-select has changed to "{0}".
complexForm.value.bird= Bird 
complexForm.value.bird.chicken=Chicken
complexForm.value.bird.goose=Goose
complexForm.value.bird.duck=Duck
complexForm.value.bird.swan=Swan
complexForm.value.animal=Animal
complexForm.value.animal.piglet=Piglet
complexForm.value.animal.pooh=Pooh
complexForm.value.animal.tiger=Tiger
complexForm.value.animal.cangaroo=Cangaroo
complexForm.value.fish= Fish 
complexForm.value.fish.willy=Willy
complexForm.value.fish.nemo=Nemo
complexForm.value.fish.dory=Dory
complexForm.value.fish.marlin=Marlin
complexForm.value.dragon=Dragon
complexForm.value.dragon.smaug=Smaug
complexForm.value.dragon.chrysophylax=Chrysophylax
complexForm.value.dragon.devon=Devon & Cornwall
complexForm.desc.bird=Birds are bipedal, warm-blooded, oviparous vertebrates characterized primarily by feathers, forelimbs modified as wings, and hollow bones.
complexForm.desc.animal=Animals are a major group of organisms, classified as the kingdom Animalia or Metazoa. In general they are multicellular, capable of locomotion and responsive to their environment, and feed by consuming other organisms. Their body plan becomes fixed as they develop, usually early on in their development as embryos, although some undergo a process of metamorphosis later on.
complexForm.desc.fish=A fish is a poikilothermic (cold-blooded) water-dwelling vertebrate with gills.
complexForm.desc.dragon=A dragon is a legendary creature, typically depicted as a large and powerful serpent or other reptile, with magical or spiritual qualities.

Flow_Navigation_Confirmation=Navigation confirmation

#examples menu
Persons=Persons
Companies=Companies
Contracts=Contracts
Samples=Samples
Lists=Lists
View=View
View_Edit=View/Edit
View_Add=View/Add
Add=Add
Edit=Edit
Error=Error
Editable_List_Memory=Editable List (Memory)
Editable_List_Backend=Editable List (Backend)
Simple_Form=Simple Form
Simple_Bean_Form=Simple Bean Form
Simple_List=Simple List
Search_Form=Search Form
Display_Form=Display Form
Editable_List=Editable List
In_memory_editable_list=In memory editable list
Editable_checkbox_list=Editable checkbox list
Displayable_editable_list=Displayable editable list
Pinnaveehaare_Oracle=Pinnaveehaare (Oracle)
Contacts_SubBeanList=Contacts (SubBeanList)
Complex_Form_HTTP=HTTP form
Rich_Text_Editor=Rich editor
Multi_List=Multiple Lists
File_Upload=File upload
Error_on_init=Error on Init
Error_on_event=Error on Event
Error_on_render=Error on Render
Simple=Simple
Advanced=Advanced
Invisible_Element_Form=Invisible element form
Popup_Example=Popup example
MultiSelect=MultiSelect
AutoComplete=Input suggest
Form_Lists=Form lists
Embedded_Form_List=Embedded form list
Redirecting=Redirecting
RadioSelect=RadioSelect
Error_on_ajax_request=Error on AJAX request
OnChangeListeners=OnChange Listeners
Form_with_Actions=Form with Actions
Trees=Trees
Simple_Tree=Simple Tree
Complex_Tree=A more complex tree
Tree_with_Unsynchronized_Actions=Unsynchronized actions
Advanced_Popup=Advanced popups
Context_Menus=Context Menus
Tabs=Tabs
Tabs_Demo=Tabs
Modal_Dialog=Modal dialog

TreeComponent=Tree Component
ComboTextInput=Combined selection+text input fields
Seamless_Validation=Seamless server side validation
ModalDialogTesting=Modal Dialog Tests


#friendly update
ufriendly.component.title=Cooperative form
ufriendly.component.intro=Cooperative forms only require user to enter minimum amount of data. Everything that can be deduced from the given information is. In this form this works as follows: when business registration number is filled in, other data can be fetched from central registry by pressing the corresponding button. At the same time, user can continue filling of the invoice data.
ufriendly.component.getdata=Fetch data from central registry
ufriendly.component.centralfirmid=Business registration number
ufriendly.component.registryaddress=Registered location
ufriendly.component.postaladdress=Postal address
ufriendly.component.bankaccount=Bank account
ufriendly.component.vatidentifier=VAT number
ufriendly.component.firmtype=Company type
ufriendly.component.invoice.id=Invoice identification number
ufriendly.component.invoice.date=Date of invoice
ufriendly.component.invoice.sum=Sum of invoice
ufriendly.public.limited=Public Ltd
ufriendly.npo=NPO
ufriendly.private.limited=Private Ltd
ufriendly.cform.reset=Reset form


demo.beanForm.tab=Tutorial First Bean Form
demo.beanForm.intro=This widget demonstrates the simplicity of using bean forms in Aranea. In addition, it shows that it's possible to bind primitives to form controls, if they are mandatory because primitives don't support null values.
demo.beanForm.caseSensitive=Case sensitive
demo.beanForm.searchString=Search string
demo.beanForm.createdDateTime=Created (date & time)
demo.beanForm.createdTime=Created (time)
demo.beanForm.createdDate=Created (date)
demo.beanForm.length=Length (BigDecimal)
demo.beanForm.siblingsCount=Siblings count (int)
demo.beanForm.peopleCount=People count (long)
demo.beanForm.weight=Weight (float)
demo.beanForm.preciseWeight=Precise weight (double)


#autocomplete release demo
release.ac.onchangetext=Changed, value is
release.ac.submitvalid=Submitted value is:  

#combotextselectinput
combo.demo.fieldinput=Consultant name
combo.intro=Combines input and select elements, making it a lot easier to use long classified values in the page. An example could be a dropdown with several hundred records.
combo.submitmessage=Entered value was:

#poll
poll.taskmsg=You have a new task, task number is ''{0}''. Task was created at ''{1}''.


#examples varia
person.add.form.label=Adding person
person.edit.form.label=Editing person
company.add.form.label=Adding company
company.edit.form.label=Editing company


#ARANEA intro texts
aranea.welcome=Welcome to Aranea-MVC 1.2!

aranea.about.title=About
aranea.about=Aranea is an Open-Source Web platform written in Java. This application \
consists of several examples built with Aranea Uilib and Aranea JSP tag library. Visit \
<a href="http://www.araneaframework.org/?pid=about" target="_blank">Aranea home page</a> for detailed \
information about goals of Aranea project.

aranea.what.title=What pre-built components and ready-to-use features does Aranea 1.2 offer me?
aranea.what.how=Just look around in this sample application to find out. Commented demos of Aranea 1.2 \
features and components are just a mouseclick away.

aranea.whatsnew=What's new in Aranea 1.2?
aranea.wecomment=Here we shortly comment on high-level modifications/features that we believe make Aranea 1.2 &gt; 1.1

aranea.item1=Back-button support
aranea.item1.desc=Aranea now allows user to click the back button of the browser to move \
to the previous pages. This feature is largely based on rsh \
(<a href="http://code.google.com/p/reallysimplehistory/" target="_blank">Really Simple History</a>) \
and is optional (turned off by default, but \
<a href="http://www.araneaframework.org/docs/1.2/reference/html/framework.html#StateVersioningContext" target="_blank">documentation</a> \
describes how to turn this feature on).

aranea.item2=Updated scripts
aranea.item2.desc=Aranea 1.2 comes with update-to-date JavaScript dependencies \
(e.g. <a href="http://www.prototypejs.org/" target="_blank">protoypeJS</a>, \
<a href="http://script.aculo.us/" target="_blank">script.aculo.us</a>, and \
<a href="http://tinymce.moxiecode.com/" target="_blank">tinyMCE</a>). Therefore, \
you can take advantatage of all the latest features they provide.

aranea.item3=Small but significant enhancements
aranea.item3.desc=Last but not least, Aranea 1.2 has received some small updates for better quality: \
<ul><li><code>SelectControl</code> can now localize (globally through <a \
href="http://www.araneaframework.org/docs/1.2/javadoc/org/araneaframework/uilib/ConfigurationContext.html#LOCALIZE_FIXED_CONTROL_DATA" \
target="_blank"><code>ConfigurationContext</code></a> or individually by setting <a \
href="http://www.araneaframework.org/docs/1.2/reference/html/forms.html#ui_select" target="_blank">\
an option of a JSP tag</a> of <code>SelectControl</code>), and sort its data</li>\
<li>lower/greater-than-or-equal have been changed for shorter output ("a &lt;= b" vs. "(a &lt; b OR a = b)"</li>\
<li>the cache time of JavaScripts can now be <a href="http://www.araneaframework.org/docs/1.2/reference/html/framework.html#araneaFileImportFilter" target="_blank">configured</a></li>\
<li>overlay dialog now has limited height and does not overflow anymore, also hides scrollbars of background content, and positions itself always in the center of the window</li>\
<li><code>OverlayContext</code> can be closed with <a href="http://www.araneaframework.org/docs/1.2/reference/html/core.html#OverlayContext" target="_blank">one command</a> (vs. multiple <code>cancel()</code><code>finish()</code>)</li>\
<li><code>EnvironmentUtil</code> has more methods to retrieve items for the <code>Environment</code></li>\
<li><code>&lt;ui:importStyles/&gt</code> and <code>&lt;ui:importScripts/&gt</code> now \
<a href="http://www.araneaframework.org/docs/1.2/reference/html/jsp.html#systemTags" target="_blank">import \
new file groups</a> to include only those scripts that you really need</li>\
<li><code>OverlayRootWidget</code> is now part of Aranea API that applications can use directly or extend it</li></ul>

aranea.whattomigrate.title=What needs to be done to migrate from Aranea 1.1 &rarr; 1.2?
aranea.migration.help=Take a look at the \
<a href="http://www.araneaframework.org/docs/1.2/aranea-1.1-to-1.2-quickmigration.txt" target="_blank">quick migration guide</a>. \
If it should leave you with some unanswered questions, turn to our \
<a href="http://forum.araneaframework.org" target="_blank">forums</a> for support.

#END OF ARANEA 1.2 INTRO TEXTS

#labels
label.logout=Logout
label.mainpage=Main page

EnglishLang=English
EstonianLang=Estonian
select.choose=-- choose --